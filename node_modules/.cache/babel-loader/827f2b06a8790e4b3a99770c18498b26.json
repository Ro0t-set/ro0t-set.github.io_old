{"ast":null,"code":"var _jsxFileName = \"/Users/ro0t/Desktop/developerFolio/src/components/ToggleSwitch/ToggleSwitch.js\";\nimport React, { useState, useContext } from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.scss\";\nconst ToggleSwitch = () => {\n  const {\n    isDark\n  } = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isDark,\n    onChange: () => {\n      styleContext.changeTheme();\n      setChecked(!isChecked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, isChecked ? emoji(\"üåú\") : emoji(\"‚òÄÔ∏è\"))));\n};\nexport default ToggleSwitch;","map":{"version":3,"names":["React","useState","useContext","emoji","StyleContext","ToggleSwitch","isDark","isChecked","setChecked","styleContext","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","changeTheme"],"sources":["/Users/ro0t/Desktop/developerFolio/src/components/ToggleSwitch/ToggleSwitch.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport \"./ToggleSwitch.scss\";\n\nconst ToggleSwitch = () => {\n  const {isDark} = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n\n  return (\n    <label className=\"switch\">\n      <input\n        type=\"checkbox\"\n        checked={isDark}\n        onChange={() => {\n          styleContext.changeTheme();\n          setChecked(!isChecked);\n        }}\n      />\n      <span className=\"slider round\">\n        <span className=\"emoji\">{isChecked ? emoji(\"üåú\") : emoji(\"‚òÄÔ∏è\")}</span>\n      </span>\n    </label>\n  );\n};\nexport default ToggleSwitch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAO,qBAAqB;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM;IAACC;EAAM,CAAC,GAAGJ,UAAU,CAACE,YAAY,CAAC;EACzC,MAAM,CAACG,SAAS,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACK,MAAM,CAAC;EAChD,MAAMG,YAAY,GAAGP,UAAU,CAACE,YAAY,CAAC;EAE7C,oBACEJ,KAAA,CAAAU,aAAA;IAAOC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBjB,KAAA,CAAAU,aAAA;IACEQ,IAAI,EAAC,UAAU;IACfC,OAAO,EAAEb,MAAO;IAChBc,QAAQ,EAAEA,CAAA,KAAM;MACdX,YAAY,CAACY,WAAW,CAAC,CAAC;MAC1Bb,UAAU,CAAC,CAACD,SAAS,CAAC;IACxB,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eACFjB,KAAA,CAAAU,aAAA;IAAMC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BjB,KAAA,CAAAU,aAAA;IAAMC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEV,SAAS,GAAGJ,KAAK,CAAC,IAAI,CAAC,GAAGA,KAAK,CAAC,IAAI,CAAQ,CACjE,CACD,CAAC;AAEZ,CAAC;AACD,eAAeE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}